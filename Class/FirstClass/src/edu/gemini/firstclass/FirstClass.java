package edu.gemini.firstclass;

/**
 * Пример простого класса
 *
 * Cтрока указывает, что класс доступен всем
 * В одном файле может быть описан ТОЛЬКО ОДИН класс public.
 * Причем его имя должно точно совпадать с именем файла (без .java)
 */
public class FirstClass {

    // Поле типа "int" с именем "a".
    // К полю можно обратиться ТОЛЬКо из методов этого класса
    // На это указывает модификатор "private"
    private int a;
    // Поле типа "int" с именем "b"
    private int b;
    // Два поля типа "int" - возможна такая запись, но она сичтается не очень хорошим стилем
    private int c, d;

    // Конструктор - специальный метод, который вызывается при создании объекта
    public FirstClass() {
    }

    // Пример метода. Метод доступен для остальных классов - он public.
    // Метод НИЧЕГО не возвращает. Это указывается словом "void"
    public void method1() {
        System.out.println("Method1");
    }

    // Пример метода. Метод НЕ доступен для остальных классов - он private
    private void method2(int f) {
        System.out.println("Method2:" + f);
    }

    // Пример метода, который возвращает значение типа int
    public int getA() {
        // Метод, который что-то возвращает должен иметь слово return с указанием
        // выражения того типа, который указан в заголовке метода.
        return a;
    }

    // Пример метода, который возвращает значение типа int
    public int summa() {
        return a + b + c + d;
    }

    /**
     * Метод main - можно запускать на выполнение тоьлко те классы, у которых есть такой метод
     * Он объявлен как static - это значит, что к нему можно обратиться не создавая объект
     */
    public static void main(String[] args) {
        FirstClass fc;
        fc = new FirstClass();

        fc.method1();
        fc.method2(10);
    }

}
